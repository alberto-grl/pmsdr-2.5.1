.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PMSDR 1"
.TH PMSDR 1 "2011-05-14" "pmsdr" "PMSDR"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pmsdr, pmsdr_dyn \-  Linux PMSDR 2.0/2.1 control program
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
pmsdr [\-h] [\-u port] [\-N device number] [\-B \s-1USB\s0 bus] [\-l]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This software manages an \s-1PMSDR\s0 receiver hardware version 2.0 and 2.1 on *nix operating systems.
As per the current state of the development (4Q 2010) the \s-1PMSDR\s0 doesn't have 
any A/D conversion capability, therefore the availability of an audio card with duplex 
capability is mandatory.
.PP
As default, pmsdr try to listen for commands on the \s-1FIFO\s0 /tmp/PMSDRcommands.
This is useful if pmsdr is used together with the especially crafted sdr-shell found in
.PP
http://code.google.com/p/sdr\-shell/source/browse/#svn/branches/pmsdr
.PP
If the above \s-1FIFO\s0 doesn't exist, pmsdr fall back to interactive on standard input/output, anyway 
useful for test.
.PP
As provided pmsdr is not able to connect to hardware, unless you start owning superuser privileges.
Please carefully read the \s-1README\s0 file to learn how setup udev subsystem to avoid that.
Similar considerations apply for the firmware upgrades.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-h\fR display a short help text
.PP
\&\fB\-l\fR list all \s-1USB\s0 devices, \s-1PMSDR\s0 are shown with asterisk aside.
.PP
\&\fB\-u\fR listen for commands on udp port specified. The argument is a short integer (1\-65535).
Please remeber that using port < 1024 requires super users privilegs.
.PP
If run without options try to open the first \s-1PMSDR\s0 hardware found on \s-1USB\s0 interfaces.
.PP
\&\fB\-B\fR uses the first \s-1PMSDR\s0 found on nth \s-1USB\s0 bus
.PP
\&\fB\-N\fR uses the nth \s-1PMSDR\s0 device (the device number can be found using the \-l option)
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Try to link to the first device found:
.PP
.Vb 1
\&          pmsdr
.Ve
.PP
Link to the third device and listen for commands at the port 12345:
.PP
.Vb 1
\&          pmsdr \-N3 \-u12345
.Ve
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
pmsdr returns  a  zero  exist  status  if it succeeds to open the hardware.
Non zero is returned in case of failure.
.SH "COMMANDS"
.IX Header "COMMANDS"
\&\fBf frequency\fR
.PP
.Vb 1
\& set QSD receiver frequency (in Hertz); the value must be in (0.1\-55MHz) range
.Ve
.PP
\&\fBfilter n\fR
 set the receiver filter according to the following table:
.IP "\(bu" 5
0 .... no filter
.IP "\(bu" 5
1 .... Band pass 2\-6 MHz
.IP "\(bu" 5
2 .... Band pass 6\-13 MHz
.IP "\(bu" 5
3 .... Band pass 12\-30 MHz
.IP "\(bu" 5
4 .... Low pass 2 MHz
.PP
\&\fBf3 frequency\fR       
 set \s-1QSD\s0 third harmonic receiver frequency (in Hertz); the value must be in (0,3\-165 MHz) range
.PP
\&\fBfd frequency\fR      
 set the downconverter \s-1LO\s0 frequency (in Hertz); the value must be in 10\-810 MHz range
.PP
\&\fBqsdbias bias\fR      
 set the \s-1QSD\s0 mixer bias level, 512 (default), 346\-692 (interval allowed)
.PP
\&\fBqsdmute (on|off)\fR  
 mute the \s-1QSD\s0 receiver
.PP
\&\fBmemf frequency \fR   
 set the frequency in not volatile memory in receiver
.PP
\&\fBdfilter n\fR
 set the down converter filter according to the following table:
.IP "\(bu" 5
0 .... down converter bypass
.IP "\(bu" 5
1 .... \s-1VHF\s0 filter
.IP "\(bu" 5
2 .... \s-1UHF\s0 filter
.IP "\(bu" 5
3 .... filter disabled
.PP
\&\fBmemf frequency\fR
 store initial frequency into \s-1PMSDR EEPROM\s0
.PP
\&\fBmemf3  frequency\fR
 store initial third harmonic frequency into \s-1PMSDR EEPROM\s0
.PP
\&\fBrmemf\fR
 restore frequency from \s-1PMSDR EEPROM\s0
.PP
\&\fBquit\fR              
 terminate the current process
.PP
\&\fBplcd x\-coord y\-coord message_text\fR   
 print the message text at X,Y coord on the \s-1LCD\s0
.PP
\&\fBifgain gain\fR      
 for compatibility with old hardware, not anymore apply for current 2.1 hardware
.SH "HOW TO COMPILE PMSDR"
.IX Header "HOW TO COMPILE PMSDR"
On the first time, it is better compile getting the sources from tarball.
.PP
Download the source tarball from Sourceforge:
.PP
.Vb 1
\& wget https://downloads.sourceforge.net/project/pmsdr/pmsdr\-2.4.1.tar.gz
.Ve
.PP
(Anyway check, on the SourceForge project page, that the above package is the more recent stable one)
.PP
Extract sources:
.PP
.Vb 2
\& cd
\& tar \-zxvf pmsdr\-2.4.1.tar.gz
.Ve
.PP
For anyone interested to contribute, this software is available on SourceForge \s-1SVN\s0 repository at the following \s-1URL:\s0
.PP
\&\fBhttps://pmsdr.svn.sourceforge.net/svnroot/pmsdr\fR
.PP
You can do a checkout of whole repository with the following command:
.PP
\&\fBsvn co https://pmsdr.svn.sourceforge.net/svnroot/pmsdr pmsdr \fR
.PP
For stable release please look on main SourceForge page or in /tags directory.
\&\fIPlease keep in mind that /trunk might have in unpredictable results because it is
used for intermediate development release.\fR
.SH "PMSDR FIRMWARE UPGRADE"
.IX Header "PMSDR FIRMWARE UPGRADE"
Install libusb 0.1.x and wget:
.PP
\&\fBsudo apt-get install libusb\-0.1\-4 libusb-dev wget\fR
.PP
Download and compile the fsusb package:
.PP
.Vb 5
\& cd
\& wget http://www.internetking.org/fsusb/fsusb\-0.1.11\-2.tar.gz
\& tar \-zxvf fsusb\-0.1.11\-2.tar.gz
\& cd fsusb\-0.1.11\-2
\& make
.Ve
.PP
Download and unzip the firmware file from Martin' site:
.PP
.Vb 2
\& wget http://www.iw3aut.altervista.org/files/PMSDR_V21r7.zip
\& unzip PMSDR_V21r7.zip
.Ve
.PP
You must have the .hex file into the current directory:
.PP
.Vb 2
\& ls \-l *.hex
\& \-rw\-r\-\-r\-\- 1 andrew andrew 93031 2010\-02\-14 21:53 PMSDR_V21r7.hex
.Ve
.PP
Double check the file length of file you get after unzip.
If it is not equal to that shown above, repeat the procedure !
.PP
Now unmount the cover of the \s-1PMSDR\s0 box and link your \s-1PMSDR\s0 to \s-1USB\s0 
interface.  Please be careful when the box cover is removed: don't touch 
the internal components when the circuits is powered.
.PP
Look behind the \s-1USB\s0 connector and locate the two push buttons S1 and S2: 
they are marked on the silkscreen too.
.PP
Wait until the display shows the usual messages and the green \s-1LED\s0 turn on, 
press both the buttons labeled S1 and S2; they are located into the lower left 
corner of \s-1PCB\s0 just behind the \s-1USB\s0 connector.
.PP
The display will be erased: release the S1 button and, after one second, the S2 button.
When you release the S1 button the red \s-1LED\s0 will blink shortly.
When you release the S2 button the red \s-1LED\s0 will light steady.
.PP
Now the \s-1PMSDR\s0 is in bootloader mode with both green \s-1LED\s0 and red \s-1LED\s0 turned on.
Moreover the \s-1PMSDR\s0 has renumbered on the \s-1USB\s0 bus: the \s-1VID:PID\s0 is now changed as follows:
.PP
.Vb 2
\& $ lsusb
\& Bus 003 Device 022: ID 04d8:000b Microchip Technology, Inc.
.Ve
.PP
Note that the \s-1PID\s0 must now read as 000b instead of 000c.
.PP
The next step requires you run the fsusb program.
\&\fBPlease do not detach the \s-1USB\s0 cable while the loader program is running !!!\fR
.PP
.Vb 6
\& $ sudo ./fsusb PMSDR_V21r7.hex
\& Locating USB Microchip(tm) PICDEM\-FS USB(tm) (vendor 0x04d8/product 0x000b)
\& Found USB PICDEM\-FS USB as device \*(Aq022\*(Aq on USB bus 003
\& Communication established.  Onboard firmware version is 1.0
\& Writing program memory successful
\& Program memory validated
.Ve
.PP
Please ignore the message says that firmware version is 1.0: it refers to 
the bootloader protocol and not to \s-1PMSDR\s0 firmware.  The programming lasts 
about 30 seconds: when the fsusb program ends you have to reset the \s-1PMSDR\s0 
to recover the normal operation.  Press again the S1 button and the 
display will show
.PP
.Vb 1
\& FW\-VERSION 2.1.7
.Ve
.PP
on the second row.
.SH "AUTHOR"
.IX Header "AUTHOR"
Martin Pernter \s-1IW3AUT,\s0 Linux porting by Andrea Montefusco \s-1IW0HDV\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The main \s-1PMSDR\s0 site from Martin \s-1IW3AUT:\s0
.PP
\&\fBhttp://www.iw3aut.altervista.org/\fR
.PP
Patrick Kulle, \s-1DH2SPK\s0 wrote an excellent HowTo's for get working \s-1PMSDR\s0 on Linux with DttSP and 
sdr-shell:
.PP
\&\fBhttp://www.dh2spk.de/amateurfunk/sdr/\fR
